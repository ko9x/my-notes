{"version":3,"sources":["webpack:///./src/app/notes/service/note.service.ts","webpack:///./src/app/home.component.ts","webpack:///./src/app/notes/git-notes/git-note-add.component.ts","webpack:///./src/app/notes/git-notes/git-note-edit.component.ts","webpack:///./src/app/notes/git-notes/git-notes.component.ts","webpack:///./src/app/notes/notes.module.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/notes/notes.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/header/header.component.css","webpack:///./src/app/notes/git-notes/git-note-add.component.css","webpack:///./src/app/notes/git-notes/git-note-edit.component.css","webpack:///./src/app/notes/git-notes/git-notes.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/notes/git-notes/git-note-add.component.html","webpack:///./src/app/notes/git-notes/git-note-edit.component.html","webpack:///./src/app/notes/git-notes/git-notes.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA0C;AAEa;AACvC;AAGhB;IAIE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAF9B,UAAK,GAAW,EAAE;IAEgB,CAAC;IAInC,+BAAS,GAAT,UAAU,IAAU;QAClB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAClC,IAAM,OAAO,GAAG,IAAI,8DAAO,CAAC;YAC1B,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kDAAkD,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACxG,CAAC;IAED,+BAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kDAAkD,CAAC;aACrE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAClD,CAAC;IApBH;QAAC,wFAAU,EAAE;;mBAAA;IAuBb,kBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;AC5BmE;AAkBpE;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IArBH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,4GAIT;YACD,MAAM,EAAE;gBACN,mDAID;aACA;YACD,aAAa,EAAE,wEAAiB,CAAC,IAAI;SACtC,CAAC;;qBAAA;IAQF,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACzBgD;AACkB;AACX;AAEH;AAOrD;IAoBE,6BAAoB,WAAwB,EAAU,WAAwB,EAAU,KAAqB,EAAU,MAAc;QAAjH,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAjBrI,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG;YACT,MAAM;YACN,SAAS;YACT,QAAQ;YACR,KAAK;YACL,MAAM;YACN,QAAQ;YACR,OAAO;YACP,KAAK;YACL,OAAO;YACP,aAAa;YACb,QAAQ;YACR,SAAS;SAEV;IAEwI,CAAC;IAE1I,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,SAAS,EAAE,CAAC,EAAE,CAAC;SAChB,CAAC;IACJ,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;aAC/C,SAAS,CACV,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,EACzB,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC1B;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,0CAAY,GAApB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAChC,CAAC;IAhDH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,kCAA4C;YAC5C,kCAA2C;SAC5C,CAAC;;2BAAA;IAgDF,0BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;AC1DgD;AAOjD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IAVH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,kCAA6C;YAC7C,kCAA4C;SAC7C,CAAC;;4BAAA;IAQF,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACdmE;AAEf;AAQrD;IAIE,2BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,UAAK,GAAW,EAAE;IAE8B,CAAC;IAEjD,oCAAQ,GAAR;QACC,IAAI,CAAC,QAAQ,EAAE;IAChB,CAAC;IAID,oCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;aACzB,SAAS,CACR,cAAI;YACF,IAAM,OAAO,GAAG,EAAE;YAClB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC;YACD,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACvB,CAAC,CACF;IACL,CAAC;IA7BH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,kCAAyC;YACzC,kCAAwC;YACxC,aAAa,EAAE,wEAAiB,CAAC,IAAI;SACtC,CAAC;;yBAAA;IA4BF,wBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCuC;AACM;AACA;AACM;AAEe;AACO;AACF;AACpB;AACN;AAY9C;IAAA;IAA2B,CAAC;IAV5B;QAAC,sFAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBACZ,qEAAY;gBACZ,2EAAmB;gBACnB,oEAAY;aACb;YACD,YAAY,EAAE,CAAC,yFAAiB,EAAE,gGAAoB,EAAE,8FAAmB,CAAC;YAC5E,SAAS,EAAE,CAAC,0EAAW,CAAC;SACzB,CAAC;;mBAAA;IACyB,kBAAC;AAAD,CAAC;;;;;;;;ACrB5B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChB0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACTX;AAOzC;IAAA;QACE,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAPD;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;SACnC,CAAC;;oBAAA;IAGF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTwD;AACjB;AACI;AACF;AAEI;AACa;AACX;AACE;AACX;AAkBvC;IAAA;IAAyB,CAAC;IAhB1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,iFAAe;gBACf,sEAAa;aACd;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;gBACV,gEAAW;gBACX,6DAAO;aACR;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;;;;AC3B4B;AAEN;AAGhD,IAAM,UAAU,GAAW;IACvB,EAAC,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,oCAAoC,EAAC;IACnE,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sEAAa,EAAE;CACxC,CAAC;AAEK,IAAM,OAAO,GAAG,qEAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACVP;AAOjD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IAVH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,kCAAsC;YACtC,kCAAqC;SACtC,CAAC;;uBAAA;IAQF,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACdqD;AAEa;AACK;AACE;AAG1E,IAAM,YAAY,GAAW;IAGjB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,yFAAiB,EAAE;IACnD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,8FAAmB,EAAE;IACzD,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,gGAAoB,EAAE;CAG1E;AAEM,IAAM,YAAY,GAAG,qEAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;;;;;;;;;ACjBhE;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,mB;;;;;;;ACAA,mB;;;;;;;ACAA,yBAAyB,qBAAqB,sBAAsB,GAAG,oBAAoB,yBAAyB,GAAG,C;;;;;;;ACAvH,mB;;;;;;;ACAA,wBAAwB,wBAAwB,GAAG,kBAAkB,qBAAqB,GAAG,gBAAgB,iBAAiB,GAAG,WAAW,oBAAoB,GAAG,qBAAqB,wBAAwB,GAAG,C;;;;;;;ACAnN,6E;;;;;;;ACAA,8vD;;;;;;;ACAA,kWAAkW,SAAS,q9B;;;;;;;ACA3W,sD;;;;;;;ACAA,yeAAye,YAAY,oBAAoB,cAAc,sHAAsH,WAAW,qJAAqJ,gBAAgB,4QAA4Q,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,4RAA4R,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,oRAAoR,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,8RAA8R,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,yRAAyR,YAAY,sBAAsB,cAAc,2IAA2I,gBAAgB,8IAA8I,WAAW,0RAA0R,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,wQAAwQ,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,wRAAwR,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,+RAA+R,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,uSAAuS,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,8QAA8Q,YAAY,sBAAsB,cAAc,4HAA4H,WAAW,6JAA6J,gBAAgB,6G","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Note } from '../note';\nimport { Http, Headers, Response } from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class NoteService {\n\n  notes: Note[] = []\n\n  constructor(private http: Http) { }\n\n\n\n  storeNote(note: Note) {\n    const body = JSON.stringify(note);\n    const headers = new Headers({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post('https://my-notes-64d6a.firebaseio.com/notes.json', body, { headers: headers });\n  }\n\n  fetchNote() {\n    return this.http.get(\"https://my-notes-64d6a.firebaseio.com/notes.json\")\n      .map((response: Response) => response.json());\n  }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/service/note.service.ts","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  template: `\n    <div class=\"container\">\n      <h1>Please Select A Notes List From The Navbar</h1>\n    </div>\n  `,\n  styles: [\n    `\n    body {\n      padding-top: 70px;\n    }\n  `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NoteService } from '../service/note.service';\n\n@Component({\n  selector: 'app-git-note-add',\n  templateUrl: './git-note-add.component.html',\n  styleUrls: ['./git-note-add.component.css']\n})\nexport class GitNoteAddComponent implements OnInit {\n\n  gitNoteForm: FormGroup;\n  notes = [];\n  sections = [\n    'misc',\n    'general',\n    'commit',\n    'log',\n    'diff',\n    'branch',\n    'merge',\n    'tag',\n    'stash',\n    'time-travel',\n    'remote',\n    'cloning'\n    \n  ]\n\n  constructor(private formBuilder: FormBuilder, private noteService: NoteService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.gitNoteForm = this.formBuilder.group({\n      section: ['', Validators.required],\n      title: ['', Validators.required],\n      content: ['', Validators.required],\n      side: [''],\n      important: ['']\n    })\n  }\n\n  onSubmit() {\n    this.noteService.storeNote(this.gitNoteForm.value)\n      .subscribe(\n      data => console.log(data),\n      error => console.log(error)\n      )\n    this.navigateBack();\n  }\n\n  private navigateBack() {\n    this.router.navigate(['../']);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/git-notes/git-note-add.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-git-note-edit',\n  templateUrl: './git-note-edit.component.html',\n  styleUrls: ['./git-note-edit.component.css']\n})\nexport class GitNoteEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/git-notes/git-note-edit.component.ts","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { NoteService } from '../service/note.service';\nimport { Note } from '../note';\n@Component({\n  selector: 'app-git-notes',\n  templateUrl: './git-notes.component.html',\n  styleUrls: ['./git-notes.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GitNotesComponent implements OnInit {\n\n  notes: Note[] = []\n\n  constructor(private noteService: NoteService) { }\n\n  ngOnInit() {\n   this.getNotes()\n  }\n\n\n\n  getNotes() {\n    this.noteService.fetchNote()\n      .subscribe(\n        data => {\n          const myArray = []\n          for (let key in data) {\n            myArray.push(data[key])\n          }\n          this.notes = myArray;\n        }\n      )\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/git-notes/git-notes.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { GitNotesComponent } from './git-notes/git-notes.component';\nimport { GitNoteEditComponent } from './git-notes/git-note-edit.component';\nimport { GitNoteAddComponent } from './git-notes/git-note-add.component';\nimport { NoteService } from './service/note.service';\nimport { notesRouting } from './notes.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    notesRouting\n  ],\n  declarations: [GitNotesComponent, GitNoteEditComponent, GitNoteAddComponent],\n  providers: [NoteService]\n})\nexport class NotesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/notes.module.ts","var map = {\n\t\"app/notes/notes.module\": [\n\t\t338\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nmodule.exports = webpackAsyncContext;\nwebpackAsyncContext.id = 378;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 378\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home.component';\nimport { NotesModule } from './notes/notes.module';\nimport { routing } from './app.routing';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    NotesModule,\n    routing\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { GitNotesComponent } from './notes/git-notes/git-notes.component';\n\nconst APP_ROUTES: Routes = [\n    {path: 'notes', loadChildren: 'app/notes/notes.module#NotesModule'},\n    {path: '', component: HomeComponent }\n];\n\nexport const routing = RouterModule.forRoot(APP_ROUTES);\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","import { Routes, RouterModule } from '@angular/router';\n\nimport { GitNotesComponent } from './git-notes/git-notes.component';\nimport { GitNoteAddComponent } from './git-notes/git-note-add.component';\nimport { GitNoteEditComponent } from './git-notes/git-note-edit.component';\n\n\nconst NOTES_ROUTES: Routes = [\n    \n        \n            { path: 'git-notes', component: GitNotesComponent },\n            { path: 'git-notes/new', component: GitNoteAddComponent },\n            { path: 'git-notes/:id/edit', component: GitNoteEditComponent }\n        \n    \n]\n\nexport const notesRouting = RouterModule.forChild(NOTES_ROUTES);\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/notes.routing.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 556\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.css\n// module id = 557\n// module chunks = 1","module.exports = \".radio{\\n   display: inline;\\n   margin-left: 2em;\\n}\\n\\n#section-title {\\n    margin-bottom: 2em;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/git-notes/git-note-add.component.css\n// module id = 558\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/git-notes/git-note-edit.component.css\n// module id = 559\n// module chunks = 1","module.exports = \"body {\\n    padding-top: 70px;\\n}\\n\\n.page-header {\\n    color: #28a745;\\n}\\n\\n.important {\\n    color: red;\\n}\\n\\n.side {\\n    color: orange;\\n}\\n\\n.section-header {\\n    padding-top: 70px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/git-notes/git-notes.component.css\n// module id = 560\n// module chunks = 1","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 561\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"navbar-header\\\">\\n      <a routerLink=\\\"\\\" class=\\\"navbar-brand\\\">My Notes</a>\\n    </div>\\n\\n   \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"dropdown\\\">\\n          <a routerLink=\\\"/notes/git-notes\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Git Notes <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"/my-notes/notes/git-notes#0\\\">TOP OF PAGE</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#1\\\">MISC GIT NOTES</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#2\\\">GENERAL COMMANDS</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#3\\\">COMMIT COMMANDS</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#4\\\">LOG COMMANDS</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#5\\\">DIFF COMMANDS SECTION</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#6\\\">BRANCH SECTION</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#7\\\">MERGING COMMANDS</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#8\\\">TAG COMMANDS</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#9\\\">STASH COMMANDS</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#10\\\">TIME-TRAVEL/RESET COMMANDS</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#11\\\">REMOTE GIT COMMANDS SECTION</a></li>\\n            <li><a href=\\\"/my-notes/notes/git-notes#12\\\">CLONING A PROJECT</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = 562\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"gitNoteForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <h3 id=\\\"section-title\\\" >Choose a section for your Git/GithHub note</h3>\\n    <div class=\\\"radio\\\" *ngFor=\\\"let section of sections\\\">\\n        <label>\\n            <input type=\\\"radio\\\" formControlName=\\\"section\\\" [value]=\\\"section\\\"><p>{{section}}</p>\\n        </label>\\n    </div>\\n    <br><br><br>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"title\\\">Title</label>\\n      <input formControlName=\\\"title\\\" type=\\\"text\\\" id=\\\"title\\\" class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"content\\\">Content</label>\\n      <textarea formControlName=\\\"content\\\" type=\\\"text\\\" id=\\\"content\\\" class=\\\"form-control\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"side\\\">Optional Side Note</label>\\n      <textarea formControlName=\\\"side\\\" type=\\\"text\\\" id=\\\"side\\\" class=\\\"form-control\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"important\\\">Optional Important Note</label>\\n      <textarea formControlName=\\\"important\\\" type=\\\"text\\\" id=\\\"important\\\" class=\\\"form-control\\\"></textarea>\\n    </div>\\n    <button type=\\\"submit\\\" [disabled]=\\\"!gitNoteForm.valid\\\" class=\\\"btn btn-primary\\\">Add Note</button>\\n  </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/git-notes/git-note-add.component.html\n// module id = 563\n// module chunks = 1","module.exports = \"<p>\\n  git-note-edit works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/git-notes/git-note-edit.component.html\n// module id = 564\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"page-header section-header\\\" id=\\\"0\\\">\\n    <h1>Git And GitHub Notes <small>select a section from the Git Notes dropdown</small></h1>\\n    <button class=\\\"btn btn-success\\\" routerLink=\\\"/notes/git-notes/new\\\">Add A Note</button>\\n  </div>\\n\\n  <div id=\\\"1\\\">\\n    <h2 class=\\\"section-header\\\">MISC GIT NOTES</h2>\\n\\n    <hr>\\n\\n    <div *ngFor=\\\"let note of notes\\\">\\n      <div *ngIf=\\\"note.section === 'misc'\\\">\\n        <h3>{{note.title}}</h3>\\n        <p>{{note.content}}</p>\\n        <div *ngIf=\\\"note.side\\\">\\n          <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n          <p>{{note.side}}</p>\\n        </div>\\n        <div *ngIf=\\\"note.important\\\">\\n          <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n          <p>{{note.important}}</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"2\\\">\\n\\n      <h2 class=\\\"section-header\\\">GENERAL COMMANDS</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'general'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"3\\\">\\n      <h2 class=\\\"section-header\\\">COMMIT COMMANDS</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'commit'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"4\\\">\\n      <h2 class=\\\"section-header\\\">LOG COMMANDS</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'log'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"5\\\">\\n      <h2 class=\\\"section-header\\\">DIFF COMMANDS SECTION</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'diff'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"6\\\">\\n      <h1 class=\\\"section-header\\\">BRANCH SECTION</h1>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'branch'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"7\\\">\\n      <h2 class=\\\"section-header\\\">MERGING COMMANDS</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'merge'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"8\\\">\\n      <h2 class=\\\"section-header\\\">TAG COMMANDS</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'tag'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"9\\\">\\n      <h2 class=\\\"section-header\\\">STASH COMMANDS</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'stash'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"10\\\">\\n      <h2 class=\\\"section-header\\\">TIME-TRAVEL/RESET COMMANDS</h2>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'time-travel'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <hr>\\n\\n    <div id=\\\"11\\\">\\n      <h1 class=\\\"section-header\\\">REMOTE GIT COMMANDS SECTION</h1>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'remote'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"12\\\">\\n      <h1 class=\\\"section-header\\\">CLONING NOTES</h1>\\n\\n      <hr>\\n\\n      <div *ngFor=\\\"let note of notes\\\">\\n        <div *ngIf=\\\"note.section === 'cloning'\\\">\\n          <h3>{{note.title}}</h3>\\n          <p>{{note.content}}</p>\\n          <div *ngIf=\\\"note.side\\\">\\n            <h5 class=\\\"side\\\"><strong>SIDE NOTE</strong></h5>\\n            <p>{{note.side}}</p>\\n          </div>\\n          <div *ngIf=\\\"note.important\\\">\\n            <h5 class=\\\"important\\\"><strong>IMPORTANT NOTE</strong></h5>\\n            <p>{{note.important}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <br><br><br><br><br><br>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/git-notes/git-notes.component.html\n// module id = 565\n// module chunks = 1"],"sourceRoot":""}